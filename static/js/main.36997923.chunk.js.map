{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","props","useState","searchText","setSearchText","className","onSubmit","e","preventDefault","onSearch","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","App","setData","loading","setLoading","query","setQuery","useEffect","axios","get","then","response","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"6LAEe,SAASA,EAAWC,GAEjC,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYE,OACE,uBAAMC,UAAU,cAAcC,SAPb,SAAAC,GACnBA,EAAEC,iBACFP,EAAMQ,SAASN,GACfI,EAAEG,cAAcC,SAId,UACE,uBAAON,UAAU,YAAYO,QAAQ,SAArC,oBACA,uBAAOC,KAAK,SACNC,SAdW,SAAAP,GACrBH,EAAcG,EAAEQ,OAAOC,QAcbC,KAAK,SACLC,YAAY,cAClB,wBAAQL,KAAK,SAASM,GAAG,SAASd,UAAU,gBAA5C,SAA4D,mBAAGA,UAAU,4BAAb,yBCrBpE,IAMee,EANH,SAAAnB,GAAK,OACf,oBAAII,UAAU,WAAd,SACE,qBAAKgB,IAAKpB,EAAMqB,IAAKC,IAAI,WCKdC,EAPA,SAAAvB,GAAK,OAClB,qBAAII,UAAU,UAAd,UACE,mBAAGA,UAAU,0BAAb,yCACA,uECkBWoB,EAnBC,SAAAxB,GACd,IACIyB,EADEC,EAAU1B,EAAM2B,KAWtB,OAREF,EADEC,EAAQE,OAAS,EACZF,EAAQG,KAAK,SAAAC,GAAG,OACrB,cAAC,EAAD,CAAKT,IAAKS,EAAIC,OAAOC,aAAaX,KAAUS,EAAIZ,OAG3C,cAAC,EAAD,IAKP,oBAAId,UAAU,WAAd,SACGqB,K,iBCZQ,SAASQ,IAEtB,MAAwBhC,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaO,EAAb,KACA,EAA8BjC,oBAAS,GAAvC,mBAAOkC,EAAP,KAAgBC,EAAhB,KACA,EAA0BnC,mBAAS,QAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KAKAC,qBAAW,kBACTC,IAAMC,IAAN,gDAAmDJ,EAAnD,uDACCK,MAAK,SAAAC,GACJT,EAAQS,EAAShB,KAAKA,MACtBS,GAAW,MAEZQ,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,QAC7C,CAACR,IAIL,OACE,gCACE,qBAAKjC,UAAU,cAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,cAACL,EAAD,CAAYS,SANA,SAACO,GAAD,OAAWuB,EAASvB,WASpC,qBAAKX,UAAU,eAAf,SACG+B,EAAW,6CAAsB,cAAC,EAAD,CAASR,KAAMA,SChC3DqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36997923.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function SearchForm(props) {\n\n  const [searchText, setSearchText] = useState('');\n\n  const onSearchChange = e => {\n    setSearchText(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSearch(searchText);\n    e.currentTarget.reset();\n  }\n\n    return (\n      <form className=\"search-form\" onSubmit={handleSubmit} >\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n        <input type=\"search\"\n              onChange={onSearchChange}\n              name=\"search\"\n              placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n      </form>\n    );\n}","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"gif\" />\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = props => {\n  const results = props.data;\n  let gifs;\n  if (results.length > 0) {\n    gifs = results.map( gif =>\n      <Gif url={gif.images.fixed_height.url} key={gif.id}/>\n    )\n  } else {\n    gifs = <NoGifs />\n  }\n\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul>\n  );\n}\n\nexport default GifList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchForm from './Components/SearchForm';\nimport GifList from './Components/GifList';\nimport axios from 'axios';\n\nexport default function App() {\n\n  const [data, setData] = useState([]); // declare state\n  const [loading, setLoading] = useState(true); // declare state\n  const [query, setQuery] = useState('cats'); // declare new state\n\n\n\n  // fetching data with axios when component mounts\n  useEffect( () =>\n    axios.get(`http://api.giphy.com/v1/gifs/search?q=${query}&api_key=8Zc8vruQ8HShTsmKIbnrtNrDkkkZOwcw&limit=20`)\n    .then(response => {\n      setData(response.data.data)\n      setLoading(false)\n    })\n    .catch(error => {\n      console.log('Error fetching and parsing data', error);\n    }), [query]);\n\n  // update query state\n  const performSearch = (value) => setQuery(value);\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">GifSearch</h1>\n            <SearchForm onSearch={performSearch}/>\n          </div>\n        </div>\n        <div className=\"main-content\">\n        { (loading) ? <p> Loading... </p> : <GifList data={data}/> }\n        </div>\n      </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}